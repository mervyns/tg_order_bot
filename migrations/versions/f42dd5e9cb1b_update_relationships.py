"""update relationships

Revision ID: f42dd5e9cb1b
Revises: 3fa84f8bd512
Create Date: 2024-11-25 17:00:31.147423

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f42dd5e9cb1b'
down_revision: Union[str, None] = '3fa84f8bd512'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('audit_logs_user_id_fkey', 'audit_logs', type_='foreignkey')
    op.drop_constraint('audit_logs_order_id_fkey', 'audit_logs', type_='foreignkey')
    op.create_foreign_key(None, 'audit_logs', 'users', ['user_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'audit_logs', 'orders', ['order_id'], ['id'], source_schema='public', referent_schema='public')
    op.add_column('orders', sa.Column('client_code', sa.String(length=10), nullable=True))
    op.add_column('orders', sa.Column('order_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.alter_column('orders', 'amount',
               existing_type=sa.NUMERIC(precision=20, scale=2),
               type_=sa.Numeric(precision=15, scale=2),
               existing_nullable=True)
    op.alter_column('orders', 'agent_code',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=10),
               existing_nullable=True)
    op.alter_column('orders', 'rate',
               existing_type=sa.NUMERIC(precision=10, scale=6),
               type_=sa.Numeric(precision=6, scale=4),
               existing_nullable=True)
    op.alter_column('orders', 'status',
               existing_type=postgresql.ENUM('PENDING', 'BANK_PROCESSING', 'CREATED', 'SUBMITTED', 'COMPLETED', 'REFUND_PENDING', 'REFUNDED', 'CANCELLED', 'CREDITED', 'PENDING_APPROVAL', 'APPROVED', 'REJECTED', name='orderstatus'),
               nullable=False)
    op.create_index('idx_orders_created_at', 'orders', ['created_at'], unique=False, schema='public')
    op.create_index('idx_orders_order_ref', 'orders', ['order_ref'], unique=False, schema='public')
    op.create_index('idx_orders_status', 'orders', ['status'], unique=False, schema='public')
    op.drop_column('orders', 'customer_code')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('orders', sa.Column('customer_code', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.drop_index('idx_orders_status', table_name='orders', schema='public')
    op.drop_index('idx_orders_order_ref', table_name='orders', schema='public')
    op.drop_index('idx_orders_created_at', table_name='orders', schema='public')
    op.alter_column('orders', 'status',
               existing_type=postgresql.ENUM('PENDING', 'BANK_PROCESSING', 'CREATED', 'SUBMITTED', 'COMPLETED', 'REFUND_PENDING', 'REFUNDED', 'CANCELLED', 'CREDITED', 'PENDING_APPROVAL', 'APPROVED', 'REJECTED', name='orderstatus'),
               nullable=True)
    op.alter_column('orders', 'rate',
               existing_type=sa.Numeric(precision=6, scale=4),
               type_=sa.NUMERIC(precision=10, scale=6),
               existing_nullable=True)
    op.alter_column('orders', 'agent_code',
               existing_type=sa.String(length=10),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
    op.alter_column('orders', 'amount',
               existing_type=sa.Numeric(precision=15, scale=2),
               type_=sa.NUMERIC(precision=20, scale=2),
               existing_nullable=True)
    op.drop_column('orders', 'order_metadata')
    op.drop_column('orders', 'client_code')
    op.drop_constraint(None, 'audit_logs', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'audit_logs', schema='public', type_='foreignkey')
    op.create_foreign_key('audit_logs_order_id_fkey', 'audit_logs', 'orders', ['order_id'], ['id'])
    op.create_foreign_key('audit_logs_user_id_fkey', 'audit_logs', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###
