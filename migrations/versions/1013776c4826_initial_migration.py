"""initial migration

Revision ID: 1013776c4826
Revises: 
Create Date: 2024-11-25 00:41:43.971849

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1013776c4826'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_logs',
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('NOW()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('NOW()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index('idx_audit_logs_action', 'audit_logs', ['action'], unique=False, schema='public')
    op.create_index('idx_audit_logs_created_at', 'audit_logs', ['created_at'], unique=False, schema='public')
    op.create_table('orders',
    sa.Column('order_ref', sa.String(length=50), nullable=False),
    sa.Column('swift_code', sa.String(length=50), nullable=True),
    sa.Column('bank_name', sa.String(length=255), nullable=True),
    sa.Column('bank_country', sa.String(length=100), nullable=True),
    sa.Column('account_number', sa.String(length=100), nullable=True),
    sa.Column('beneficiary_name', sa.String(length=255), nullable=True),
    sa.Column('currency', sa.String(length=10), nullable=True),
    sa.Column('amount', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('payout_company', sa.String(length=255), nullable=True),
    sa.Column('rate', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('agent_code', sa.String(length=50), nullable=True),
    sa.Column('customer_code', sa.String(length=50), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'BANK_PROCESSING', 'CREATED', 'SUBMITTED', 'COMPLETED', 'REFUND_PENDING', 'REFUNDED', 'CANCELLED', 'CREDITED', 'PENDING_APPROVAL', 'APPROVED', 'REJECTED', name='orderstatus'), nullable=True),
    sa.Column('validation_messages', sa.Text(), nullable=True),
    sa.Column('created_by_id', sa.String(length=50), nullable=True),
    sa.Column('updated_by_id', sa.String(length=50), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('NOW()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('NOW()'), nullable=False),
    sa.CheckConstraint('amount > 0', name='positive_amount_check'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index('idx_orders_beneficiary_name', 'orders', ['beneficiary_name'], unique=False, schema='public')
    op.create_index('idx_orders_status_created_at', 'orders', ['status', 'created_at'], unique=False, schema='public')
    op.create_table('users',
    sa.Column('telegram_id', sa.String(length=100), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('password', sa.String(length=100), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'AGENT_MANAGER', 'AGENT', 'CLIENT_MANAGER', 'CLIENT', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('permissions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('settings', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('NOW()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('NOW()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('telegram_id'),
    schema='public'
    )
    op.create_index('idx_users_role_is_active', 'users', ['role', 'is_active'], unique=False, schema='public')
    op.create_index('idx_users_telegram_id_unique', 'users', ['telegram_id'], unique=True, schema='public')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_users_telegram_id_unique', table_name='users', schema='public')
    op.drop_index('idx_users_role_is_active', table_name='users', schema='public')
    op.drop_table('users', schema='public')
    op.drop_index('idx_orders_status_created_at', table_name='orders', schema='public')
    op.drop_index('idx_orders_beneficiary_name', table_name='orders', schema='public')
    op.drop_table('orders', schema='public')
    op.drop_index('idx_audit_logs_created_at', table_name='audit_logs', schema='public')
    op.drop_index('idx_audit_logs_action', table_name='audit_logs', schema='public')
    op.drop_table('audit_logs', schema='public')
    # ### end Alembic commands ###
